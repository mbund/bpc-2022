package main

import (
	"fmt"
)

var totals [54]int64

func count_paths(x int64, y int64, step int64, grid [][]uint64) {
	if step > 0 {
		for _, d := range []struct{ x, y int64 }{{0, 1}, {1, 0}, {-1, 0}, {0, -1}} {
			if x+d.x >= 0 && x+d.x < 9 && y+d.y >= 0 && y+d.y < 6 && grid[y+d.y][x+d.x] == 0 {
				grid[y+d.y][x+d.x] = 1
				totals[step-1] += 1
				count_paths(x+d.x, y+d.y, step-1, grid)
				grid[y+d.y][x+d.x] = 0
			}
		}
	}
}

func main() {
	grid := [][]uint64{
		{1, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
		{0, 0, 0, 0, 0, 0, 0, 0, 0},
	}

	count_paths(0, 0, 54, grid)
	fmt.Println(totals)
}

// [0 5585508 26484501 128916966 350807281 945494688 1852442533 3576053113 5561101894 8520022062 11089846693 14237439300 16032402575 17839966473 17780221382 17551431678 15750071567 14033137697 11495157457 9368898201 7084990606 5337013619 3760950126 2639365881 1746894074 1149643292 719624249 446914580 266265750 157109203 89605546 50574814 27729944 15051753 7946633 4158271 2112694 1065277 520281 251969 118047 54608 24494 10873 4701 2037 853 358 145 60 24 10 4 2]
